table dCalendario
	lineageTag: ad07a4ef-fc94-4763-97fb-4a8802672bb7

	column Date
		dataType: dateTime
		formatString: Long Date
		lineageTag: 90be3ee1-dfa4-4c42-a141-87292755546b
		summarizeBy: none
		sourceColumn: Date

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column Year
		dataType: int64
		formatString: 0
		lineageTag: 5043400d-993d-4960-ac8d-faaa0dea676e
		summarizeBy: none
		sourceColumn: Year

		annotation SummarizationSetBy = Automatic

	column Month
		dataType: int64
		formatString: 0
		lineageTag: e3ac0f73-1c6d-4ffe-ad1c-4f37ba431868
		summarizeBy: none
		sourceColumn: Month

		annotation SummarizationSetBy = Automatic

	column MonthName
		dataType: string
		lineageTag: 48149d0f-c3fd-42a7-b9d3-127fd7389825
		summarizeBy: none
		sourceColumn: MonthName

		annotation SummarizationSetBy = Automatic

	column Day
		dataType: int64
		formatString: 0
		lineageTag: 37f89ade-9e92-474d-957d-22894648516e
		summarizeBy: none
		sourceColumn: Day

		annotation SummarizationSetBy = Automatic

	column DayWeek
		dataType: int64
		formatString: 0
		lineageTag: 38a14805-20b2-4d9e-9dd9-d75e4610e642
		summarizeBy: none
		sourceColumn: DayWeek

		annotation SummarizationSetBy = Automatic

	column DayWeekName
		dataType: string
		lineageTag: 472fcd7c-9626-4a16-849a-e8c6760abe03
		summarizeBy: none
		sourceColumn: DayWeekName

		annotation SummarizationSetBy = Automatic

	column Quarter
		dataType: int64
		formatString: 0
		lineageTag: bdc5c5c6-2fc9-4256-a42b-13796e76f390
		summarizeBy: none
		sourceColumn: Quarter

		annotation SummarizationSetBy = Automatic

	column MonthYear
		dataType: string
		lineageTag: 27a18fc4-1b80-4829-8210-0364ab25d381
		summarizeBy: none
		sourceColumn: MonthYear

		annotation SummarizationSetBy = Automatic

	partition dCalendario = m
		mode: import
		source = ```
				let
				    // Obtém a menor data da coluna OrderTime
				    DataMin = Date.From(List.Min(taco_sales[Order Time])),
				
				    // Obtém a maior data da coluna OrderTime
				    DataMax = Date.From(List.Max(taco_sales[Order Time])),
				
				    // Cria uma lista de datas entre a menor e a maior
				    ListaDatas = List.Dates(DataMin, Duration.Days(DataMax - DataMin) + 1, #duration(1,0,0,0)),
				
				    // Converte a lista em uma tabela
				    TabelaDatas = Table.FromList(ListaDatas, Splitter.SplitByNothing(), {"Date"}),
				    
				    // Adiciona colunas de atributos de data
				    TipoData = Table.TransformColumnTypes(TabelaDatas,{{"Date", type date}}),
				    Year = Table.AddColumn(TipoData, "Year", each Date.Year([Date]), Int64.Type),
				    Month = Table.AddColumn(Year, "Month", each Date.Month([Date]), Int64.Type),
				    MonthName = Table.AddColumn(Month, "MonthName", each Date.ToText([Date], "MMMM", "en-US"), type text),
				    Day = Table.AddColumn(MonthName, "Day", each Date.Day([Date]), Int64.Type),
				    DayWeek = Table.AddColumn(Day, "DayWeek", each Date.DayOfWeek([Date]), Int64.Type),
				    DayWeekName = Table.AddColumn(DayWeek, "DayWeekName", each Date.ToText([Date], "dddd", "en-US"), type text),
				    Quarter = Table.AddColumn(DayWeekName, "Quarter", each Date.QuarterOfYear([Date]), Int64.Type),
				    MonthYear = Table.AddColumn(Quarter, "MonthYear", each Date.ToText([Date], "MMM yyyy", "en-US"), type text)
				in
				    MonthYear
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

